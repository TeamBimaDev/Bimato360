# Generated by Django 5.0.6 on 2024-05-21 14:06

import django.core.validators
import django.db.models.deletion
import simple_history.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("company", "0002_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("core", "0002_initial"),
        ("erp", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BimaTreasuryPaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                ("active", models.BooleanField(default=True)),
                (
                    "note",
                    models.TextField(
                        blank=True, null=True, verbose_name="Description/Note"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=128, null=True, unique=True
                    ),
                ),
                ("is_system", models.BooleanField(default=False)),
                (
                    "income_outcome",
                    models.CharField(
                        choices=[("INCOME", "INCOME"), ("OUTCOME", "OUTCOME")],
                        max_length=32,
                        verbose_name="INCOME_OUTCOME",
                    ),
                ),
                (
                    "cash_bank",
                    models.CharField(
                        choices=[("CASH", "Cash"), ("BANK", "Bank")],
                        max_length=32,
                        verbose_name="CASH_BANK",
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaTreasuryPaymentTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                ("active", models.BooleanField(default=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("IMMEDIATE", "IMMEDIATE"),
                            ("AFTER_ONE_WEEK", "AFTER_ONE_WEEK"),
                            ("AFTER_TWO_WEEK", "AFTER_TWO_WEEK"),
                            ("END_OF_MONTH", "END_OF_MONTH"),
                            ("NEXT_MONTH", "NEXT_MONTH"),
                            ("CUSTOM", "CUSTOM"),
                        ],
                        max_length=64,
                    ),
                ),
                (
                    "note",
                    models.TextField(
                        blank=True, null=True, verbose_name="Description/Note"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=128, null=True, unique=True
                    ),
                ),
                ("is_system", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["name"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaTreasuryTransactionType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                ("active", models.BooleanField(default=True)),
                (
                    "note",
                    models.TextField(
                        blank=True, null=True, verbose_name="Description/Note"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=128, null=True, unique=True
                    ),
                ),
                ("is_system", models.BooleanField(default=False)),
                (
                    "income_outcome",
                    models.CharField(
                        choices=[("INCOME", "INCOME"), ("OUTCOME", "OUTCOME")],
                        max_length=32,
                        verbose_name="INCOME_OUTCOME",
                    ),
                ),
                (
                    "cash_bank",
                    models.CharField(
                        choices=[("CASH", "Cash"), ("BANK", "Bank")],
                        max_length=32,
                        verbose_name="CASH_BANK",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="TransactionPurchaseDocumentPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount_paid", models.DecimalField(decimal_places=3, max_digits=14)),
            ],
        ),
        migrations.CreateModel(
            name="TransactionSaleDocumentPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount_paid", models.DecimalField(decimal_places=3, max_digits=14)),
            ],
        ),
        migrations.CreateModel(
            name="BimaTreasuryBankAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "account_number",
                    models.CharField(max_length=50, unique=True, verbose_name="RIB"),
                ),
                (
                    "iban",
                    models.CharField(
                        blank=True,
                        max_length=34,
                        null=True,
                        unique=True,
                        verbose_name="IBAN",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        max_digits=14,
                        verbose_name="Balance",
                    ),
                ),
                (
                    "account_holder_name",
                    models.CharField(
                        max_length=255, verbose_name="Account Holder Name"
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("note", models.TextField(blank=True, null=True, verbose_name="Notes")),
                ("parent_id", models.PositiveIntegerField()),
                (
                    "bank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.bimacorebank",
                        verbose_name="Bank",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.bimacorecurrency",
                        verbose_name="Currency",
                    ),
                ),
                (
                    "parent_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaTreasuryCash",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128, unique=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        max_digits=14,
                        verbose_name="Balance",
                    ),
                ),
                ("note", models.TextField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="company.bimacompany",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaTreasuryPaymentTermDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "percentage",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        choices=[
                            ("IMMEDIATE", "IMMEDIATE"),
                            ("AFTER_ONE_WEEK", "AFTER_ONE_WEEK"),
                            ("AFTER_TWO_WEEK", "AFTER_TWO_WEEK"),
                            ("END_OF_MONTH", "END_OF_MONTH"),
                            ("NEXT_MONTH", "NEXT_MONTH"),
                        ],
                        max_length=64,
                    ),
                ),
                (
                    "payment_term",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_term_details",
                        to="treasury.bimatreasurypaymentterm",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BimaTreasuryTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "number",
                    models.CharField(max_length=32, unique=True, verbose_name="Number"),
                ),
                (
                    "nature",
                    models.CharField(
                        choices=[("CASH", "Cash"), ("BANK", "Bank")],
                        max_length=5,
                        verbose_name="Nature",
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[("INCOME", "Income"), ("OUTCOME", "Outcome")],
                        max_length=7,
                        verbose_name="Direction",
                    ),
                ),
                ("note", models.TextField(blank=True, null=True, verbose_name="Notes")),
                ("date", models.DateField(verbose_name="Date")),
                (
                    "expected_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Expected Date"
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=3, max_digits=14, verbose_name="Amount"
                    ),
                ),
                (
                    "remaining_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Amount Paid",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Reference"
                    ),
                ),
                (
                    "partner_bank_account_number",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Bank account number",
                    ),
                ),
                (
                    "bank_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="treasury.bimatreasurybankaccount",
                        verbose_name="Bank Account",
                    ),
                ),
                (
                    "cash",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="treasury.bimatreasurycash",
                        verbose_name="Cash",
                    ),
                ),
                (
                    "partner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="erp.bimaerppartner",
                        verbose_name="Partner",
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="treasury.bimatreasurypaymentmethod",
                        verbose_name="Transaction Type",
                    ),
                ),
                (
                    "transaction_source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="treasury.bimatreasurytransaction",
                        verbose_name="Transaction Source",
                    ),
                ),
                (
                    "transaction_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="treasury.bimatreasurytransactiontype",
                        verbose_name="Transaction Type",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="HistoricalBimaTreasuryTransaction",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "number",
                    models.CharField(
                        db_index=True, max_length=32, verbose_name="Number"
                    ),
                ),
                (
                    "nature",
                    models.CharField(
                        choices=[("CASH", "Cash"), ("BANK", "Bank")],
                        max_length=5,
                        verbose_name="Nature",
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[("INCOME", "Income"), ("OUTCOME", "Outcome")],
                        max_length=7,
                        verbose_name="Direction",
                    ),
                ),
                ("note", models.TextField(blank=True, null=True, verbose_name="Notes")),
                ("date", models.DateField(verbose_name="Date")),
                (
                    "expected_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Expected Date"
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=3, max_digits=14, verbose_name="Amount"
                    ),
                ),
                (
                    "remaining_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Amount Paid",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Reference"
                    ),
                ),
                (
                    "partner_bank_account_number",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Bank account number",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "bank_account",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="treasury.bimatreasurybankaccount",
                        verbose_name="Bank Account",
                    ),
                ),
                (
                    "cash",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="treasury.bimatreasurycash",
                        verbose_name="Cash",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical bima treasury transaction",
                "verbose_name_plural": "historical bima treasury transactions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
