# Generated by Django 5.0.6 on 2024-05-21 14:06

import django.db.models.deletion
import simple_history.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BimaErpPartner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "is_supplier",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="Is Supplier"
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="Is Customer"
                    ),
                ),
                (
                    "partner_type",
                    models.CharField(
                        choices=[("INDIVIDUAL", "Individual"), ("COMPANY", "Company")],
                        max_length=128,
                        verbose_name="Partner Type",
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SOLE_PROPRIETORSHIP", "Sole proprietorship"),
                            ("GENERAL_PARTNERSHIP", "General partnership"),
                            ("LIMITED_PARTNERSHIP", "Limited partnership"),
                            (
                                "PUBLIC_LIMITED_COMPANY_PLC",
                                "Public limited company(PLC)",
                            ),
                            (
                                "LIMITED_LIABILITY_COMPANY_LLC",
                                "Limited liability company(LLC)",
                            ),
                            ("SIMPLIFIED_JOINT_STOCK", "Simplified joint - stock"),
                            (
                                "COMPANY_PARTNERSHIP_LIMITED_BY_SHARES",
                                "company Partnership limited by shares",
                            ),
                            ("COOPERATIVE_SOCIETY", "Cooperative society"),
                            (
                                "UNINCORPORATED_JOINT_VENTURE",
                                "Unincorporated joint venture",
                            ),
                            ("JOINT_STOCK_COMPANY", "Joint - stock company"),
                        ],
                        max_length=256,
                        null=True,
                        verbose_name="Company Type",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="First Name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Last Name"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("MALE", "Male"), ("FEMALE", "Female")],
                        max_length=32,
                        null=True,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "social_security_number",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="Social Security Number",
                    ),
                ),
                (
                    "id_number",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="ID Number"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "phone",
                    models.CharField(blank=True, null=True, verbose_name="Phone"),
                ),
                ("fax", models.CharField(blank=True, null=True, verbose_name="Fax")),
                (
                    "company_name",
                    models.CharField(
                        blank=True, null=True, verbose_name="Company Name"
                    ),
                ),
                (
                    "company_activity",
                    models.CharField(
                        blank=True, null=True, verbose_name="Company Activity"
                    ),
                ),
                (
                    "vat_id_number",
                    models.CharField(
                        blank=True, null=True, verbose_name="VAT ID Number"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("BLOCKED", "Blocked"),
                        ],
                        max_length=32,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                ("note", models.CharField(blank=True, null=True, verbose_name="Note")),
                (
                    "company_date_creation",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Company Date Creation"
                    ),
                ),
                (
                    "company_siren",
                    models.CharField(
                        blank=True, null=True, verbose_name="Company Siren"
                    ),
                ),
                (
                    "company_siret",
                    models.CharField(
                        blank=True, null=True, verbose_name="Company Siret"
                    ),
                ),
                (
                    "company_date_registration",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Company Date Registration"
                    ),
                ),
                (
                    "rcs_number",
                    models.CharField(blank=True, null=True, verbose_name="RCS Number"),
                ),
                (
                    "company_date_struck_off",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Company Date Struck Off"
                    ),
                ),
                (
                    "company_ape_text",
                    models.CharField(
                        blank=True, null=True, verbose_name="Company APE Text"
                    ),
                ),
                (
                    "company_ape_code",
                    models.CharField(
                        blank=True, null=True, verbose_name="Company APE Code"
                    ),
                ),
                (
                    "company_capital",
                    models.CharField(
                        blank=True, null=True, verbose_name="Company Capital"
                    ),
                ),
                (
                    "credit",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        verbose_name="Credit",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        verbose_name="Balance",
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaErpPurchaseDocumentProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "purchase_document_public_id",
                    models.UUIDField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("reference", models.CharField(max_length=255)),
                ("quantity", models.DecimalField(decimal_places=3, max_digits=18)),
                (
                    "unit_of_measure",
                    models.CharField(default="default", max_length=255),
                ),
                ("unit_price", models.DecimalField(decimal_places=3, max_digits=18)),
                (
                    "vat",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "discount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_without_vat",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_after_discount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaErpSaleDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "number",
                    models.CharField(max_length=32, unique=True, verbose_name="Number"),
                ),
                ("date", models.DateField(verbose_name="Date")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("CONFIRMED", "Confirmed"),
                            ("CANCELED", "CANCELED"),
                        ],
                        default="DRAFT",
                        max_length=128,
                        verbose_name="Status",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("QUOTE", "Quote"),
                            ("ORDER", "ORDER"),
                            ("INVOICE", "Invoice"),
                            ("CREDIT_NOTE", "Credit note"),
                        ],
                        default="Quote",
                        max_length=128,
                        verbose_name="Type",
                    ),
                ),
                (
                    "vat_label",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=128,
                        null=True,
                        verbose_name="VAT Label",
                    ),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="VAT Amount",
                    ),
                ),
                ("note", models.TextField(blank=True, null=True, verbose_name="Note")),
                (
                    "private_note",
                    models.TextField(
                        blank=True, null=True, verbose_name="Private Note"
                    ),
                ),
                (
                    "validity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("day_30", "30 days"),
                            ("day_15", "15 days"),
                            ("day_10", "10 days"),
                            ("day_45", "45 days"),
                        ],
                        null=True,
                        verbose_name="Validity",
                    ),
                ),
                (
                    "delivery_terms",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Delivery Terms",
                    ),
                ),
                (
                    "total_amount_without_vat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Total Amount without VAT",
                    ),
                ),
                (
                    "total_after_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Total After Discount",
                    ),
                ),
                (
                    "total_vat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Total VAT",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Total Amount",
                    ),
                ),
                (
                    "total_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Total Discount",
                    ),
                ),
                (
                    "is_recurring",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Is Recurring?",
                    ),
                ),
                (
                    "is_recurring_parent",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Is Recurring Parent?",
                    ),
                ),
                (
                    "is_recurring_ended",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Is Recurring Ended?",
                    ),
                ),
                (
                    "recurring_initial_parent_id",
                    models.PositiveIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Initial Parent ID",
                    ),
                ),
                (
                    "recurring_initial_parent_public_id",
                    models.UUIDField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Initial Parent Public ID",
                    ),
                ),
                (
                    "recurring_interval",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DAILY", "QUOTIDIEN"),
                            ("WEEKLY", "HEBDOMADAIRE"),
                            ("MONTHLY", "MENSUEL"),
                            ("QUARTERLY", "TRIMESTRIEL"),
                            ("YEARLY", "ANNUEL"),
                            ("CUSTOM", "PERSONNALISE"),
                        ],
                        help_text="Interval for recurring sale documents",
                        null=True,
                        verbose_name="Recurring Interval",
                    ),
                ),
                (
                    "recurring_interval_type_custom_number",
                    models.PositiveIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Recurring Interval Type Custom Number",
                    ),
                ),
                (
                    "recurring_interval_type_custom_unit",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DAY", "JOUR"),
                            ("WEEK", "SEMAINE"),
                            ("MONTH", "MOIS"),
                            ("YEAR", "ANNEE"),
                        ],
                        null=True,
                        verbose_name="Recurring Interval Type Custom Unit",
                    ),
                ),
                (
                    "recurring_cycle",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("UNDEFINED", "INDEFINIE"),
                            ("END_AT", "TERMINE LE"),
                            ("END_AFTER", "TERMINE APRES"),
                        ],
                        null=True,
                        verbose_name="Recurring Cycle",
                    ),
                ),
                (
                    "recurring_cycle_number_to_repeat",
                    models.PositiveIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Recurring Cycle Number to Repeat",
                    ),
                ),
                (
                    "recurring_cycle_stop_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="Recurring Cycle Stop At"
                    ),
                ),
                (
                    "recurring_cycle_stopped_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="Recurring Cycle Stopped At"
                    ),
                ),
                (
                    "recurring_last_generated_day",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Last Generated Day",
                    ),
                ),
                (
                    "recurring_next_generated_day",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Next Generated Day",
                    ),
                ),
                (
                    "recurring_reason_stop",
                    models.TextField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Reason Stop",
                    ),
                ),
                (
                    "recurring_reason_reactivated",
                    models.TextField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Reason Reactivated",
                    ),
                ),
                (
                    "recurring_reactivated_date",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Reactivated Date",
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NOT_PAID", "NOT_PAID"),
                            ("PARTIAL_PAID", "PARTIAL_PAID"),
                            ("PAID", "PAID"),
                        ],
                        default="NOT_PAID",
                        null=True,
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Amount Paid",
                    ),
                ),
                (
                    "next_due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Next Due Date"
                    ),
                ),
                (
                    "is_payment_late",
                    models.BooleanField(default=False, verbose_name="Is Payment Late?"),
                ),
                (
                    "days_in_late",
                    models.PositiveIntegerField(default=0, verbose_name="Days in Late"),
                ),
                (
                    "last_due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Last Due Date"
                    ),
                ),
                (
                    "last_generated_file_url",
                    models.TextField(blank=True, null=True, verbose_name="Fichier"),
                ),
            ],
            options={
                "ordering": ["-date"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaErpSaleDocumentProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sale_document_public_id",
                    models.UUIDField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("reference", models.CharField(max_length=255)),
                ("quantity", models.DecimalField(decimal_places=3, max_digits=18)),
                (
                    "unit_of_measure",
                    models.CharField(default="default", max_length=255),
                ),
                ("unit_price", models.DecimalField(decimal_places=3, max_digits=18)),
                (
                    "vat",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "discount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_without_vat",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_after_discount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaErpUnitOfMeasure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128, unique=True)),
                ("active", models.BooleanField(default=True)),
                ("is_default_for_service_product", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["name"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaErpVat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128, unique=True)),
                ("rate", models.FloatField(unique=True)),
                ("active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="HistoricalBimaErpPurchaseDocument",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                ("number", models.CharField(db_index=True, max_length=32)),
                (
                    "number_at_partner",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                ("date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("CONFIRMED", "Confirmed"),
                            ("CANCELED", "CANCELED"),
                        ],
                        default="DRAFT",
                        max_length=128,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("QUOTE", "Quote"),
                            ("ORDER", "ORDER"),
                            ("INVOICE", "Invoice"),
                            ("CREDIT_NOTE", "Credit note"),
                            ("RFQ", "Request for Quotation"),
                        ],
                        default="Quote",
                        max_length=128,
                    ),
                ),
                (
                    "vat_label",
                    models.CharField(blank=True, default="", max_length=128, null=True),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                ("note", models.TextField(blank=True, null=True)),
                ("private_note", models.TextField(blank=True, null=True)),
                (
                    "validity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("day_30", "30 days"),
                            ("day_15", "15 days"),
                            ("day_10", "10 days"),
                            ("day_45", "45 days"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "delivery_terms",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "total_amount_without_vat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "total_after_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "total_vat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "total_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NOT_PAID", "NOT_PAID"),
                            ("PARTIAL_PAID", "PARTIAL_PAID"),
                            ("PAID", "PAID"),
                        ],
                        default="NOT_PAID",
                        null=True,
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Amount Paid",
                    ),
                ),
                (
                    "next_due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Next Due Date"
                    ),
                ),
                (
                    "is_payment_late",
                    models.BooleanField(default=False, verbose_name="Is Payment Late?"),
                ),
                (
                    "days_in_late",
                    models.PositiveIntegerField(default=0, verbose_name="Days in Late"),
                ),
                (
                    "last_due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Last Due Date"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical bima erp purchase document",
                "verbose_name_plural": "historical bima erp purchase documents",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBimaErpPurchaseDocumentProduct",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "purchase_document_public_id",
                    models.UUIDField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("reference", models.CharField(max_length=255)),
                ("quantity", models.DecimalField(decimal_places=3, max_digits=18)),
                (
                    "unit_of_measure",
                    models.CharField(default="default", max_length=255),
                ),
                ("unit_price", models.DecimalField(decimal_places=3, max_digits=18)),
                (
                    "vat",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "discount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_without_vat",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_after_discount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical bima erp purchase document product",
                "verbose_name_plural": "historical bima erp purchase document products",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBimaErpSaleDocument",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "number",
                    models.CharField(
                        db_index=True, max_length=32, verbose_name="Number"
                    ),
                ),
                ("date", models.DateField(verbose_name="Date")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("CONFIRMED", "Confirmed"),
                            ("CANCELED", "CANCELED"),
                        ],
                        default="DRAFT",
                        max_length=128,
                        verbose_name="Status",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("QUOTE", "Quote"),
                            ("ORDER", "ORDER"),
                            ("INVOICE", "Invoice"),
                            ("CREDIT_NOTE", "Credit note"),
                        ],
                        default="Quote",
                        max_length=128,
                        verbose_name="Type",
                    ),
                ),
                (
                    "vat_label",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=128,
                        null=True,
                        verbose_name="VAT Label",
                    ),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="VAT Amount",
                    ),
                ),
                ("note", models.TextField(blank=True, null=True, verbose_name="Note")),
                (
                    "private_note",
                    models.TextField(
                        blank=True, null=True, verbose_name="Private Note"
                    ),
                ),
                (
                    "validity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("day_30", "30 days"),
                            ("day_15", "15 days"),
                            ("day_10", "10 days"),
                            ("day_45", "45 days"),
                        ],
                        null=True,
                        verbose_name="Validity",
                    ),
                ),
                (
                    "delivery_terms",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Delivery Terms",
                    ),
                ),
                (
                    "total_amount_without_vat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Total Amount without VAT",
                    ),
                ),
                (
                    "total_after_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Total After Discount",
                    ),
                ),
                (
                    "total_vat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Total VAT",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Total Amount",
                    ),
                ),
                (
                    "total_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Total Discount",
                    ),
                ),
                (
                    "is_recurring",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Is Recurring?",
                    ),
                ),
                (
                    "is_recurring_parent",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Is Recurring Parent?",
                    ),
                ),
                (
                    "is_recurring_ended",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Is Recurring Ended?",
                    ),
                ),
                (
                    "recurring_initial_parent_id",
                    models.PositiveIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Initial Parent ID",
                    ),
                ),
                (
                    "recurring_initial_parent_public_id",
                    models.UUIDField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Initial Parent Public ID",
                    ),
                ),
                (
                    "recurring_interval",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DAILY", "QUOTIDIEN"),
                            ("WEEKLY", "HEBDOMADAIRE"),
                            ("MONTHLY", "MENSUEL"),
                            ("QUARTERLY", "TRIMESTRIEL"),
                            ("YEARLY", "ANNUEL"),
                            ("CUSTOM", "PERSONNALISE"),
                        ],
                        help_text="Interval for recurring sale documents",
                        null=True,
                        verbose_name="Recurring Interval",
                    ),
                ),
                (
                    "recurring_interval_type_custom_number",
                    models.PositiveIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Recurring Interval Type Custom Number",
                    ),
                ),
                (
                    "recurring_interval_type_custom_unit",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DAY", "JOUR"),
                            ("WEEK", "SEMAINE"),
                            ("MONTH", "MOIS"),
                            ("YEAR", "ANNEE"),
                        ],
                        null=True,
                        verbose_name="Recurring Interval Type Custom Unit",
                    ),
                ),
                (
                    "recurring_cycle",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("UNDEFINED", "INDEFINIE"),
                            ("END_AT", "TERMINE LE"),
                            ("END_AFTER", "TERMINE APRES"),
                        ],
                        null=True,
                        verbose_name="Recurring Cycle",
                    ),
                ),
                (
                    "recurring_cycle_number_to_repeat",
                    models.PositiveIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Recurring Cycle Number to Repeat",
                    ),
                ),
                (
                    "recurring_cycle_stop_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="Recurring Cycle Stop At"
                    ),
                ),
                (
                    "recurring_cycle_stopped_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="Recurring Cycle Stopped At"
                    ),
                ),
                (
                    "recurring_last_generated_day",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Last Generated Day",
                    ),
                ),
                (
                    "recurring_next_generated_day",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Next Generated Day",
                    ),
                ),
                (
                    "recurring_reason_stop",
                    models.TextField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Reason Stop",
                    ),
                ),
                (
                    "recurring_reason_reactivated",
                    models.TextField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Reason Reactivated",
                    ),
                ),
                (
                    "recurring_reactivated_date",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Recurring Reactivated Date",
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NOT_PAID", "NOT_PAID"),
                            ("PARTIAL_PAID", "PARTIAL_PAID"),
                            ("PAID", "PAID"),
                        ],
                        default="NOT_PAID",
                        null=True,
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Amount Paid",
                    ),
                ),
                (
                    "next_due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Next Due Date"
                    ),
                ),
                (
                    "is_payment_late",
                    models.BooleanField(default=False, verbose_name="Is Payment Late?"),
                ),
                (
                    "days_in_late",
                    models.PositiveIntegerField(default=0, verbose_name="Days in Late"),
                ),
                (
                    "last_due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Last Due Date"
                    ),
                ),
                (
                    "last_generated_file_url",
                    models.TextField(blank=True, null=True, verbose_name="Fichier"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical bima erp sale document",
                "verbose_name_plural": "historical bima erp sale documents",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBimaErpSaleDocumentProduct",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "sale_document_public_id",
                    models.UUIDField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("reference", models.CharField(max_length=255)),
                ("quantity", models.DecimalField(decimal_places=3, max_digits=18)),
                (
                    "unit_of_measure",
                    models.CharField(default="default", max_length=255),
                ),
                ("unit_price", models.DecimalField(decimal_places=3, max_digits=18)),
                (
                    "vat",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "discount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_without_vat",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_after_discount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=18, null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical bima erp sale document product",
                "verbose_name_plural": "historical bima erp sale document products",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="BimaErpCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="erp.bimaerpcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaErpProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "reference",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Reference"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "ean13",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="EAN13"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("STOCKABLE_PRODUCT", "Stockable Products"),
                            ("SERVICE_PRODUCTS", "Service Products"),
                            ("PRODUCTION_PRODUCTS", "Production Products"),
                        ],
                        max_length=255,
                        verbose_name="Type",
                    ),
                ),
                (
                    "purchase_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=18,
                        null=True,
                        verbose_name="Purchase Price",
                    ),
                ),
                (
                    "sell_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=18,
                        null=True,
                        verbose_name="Sell Price",
                    ),
                ),
                (
                    "price_calculation_method",
                    models.CharField(
                        choices=[
                            ("MANUAL", "Manual Price"),
                            ("PERCENTAGE", "Price based on Percentage"),
                        ],
                        max_length=50,
                        verbose_name="Price Calculation Method",
                    ),
                ),
                (
                    "sell_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Sell Percentage",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("OUT_OF_STOCK", "Out of Stock:"),
                            ("IN_TRANSIT", "In transit"),
                            ("DISCONTINUED", "Discontinued"),
                            ("NOT_FOR_SALE", "Not for sale"),
                        ],
                        max_length=50,
                        verbose_name="Status",
                    ),
                ),
                (
                    "minimum_stock_level",
                    models.PositiveIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Minimum Stock Level",
                    ),
                ),
                (
                    "maximum_stock_level",
                    models.PositiveIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Maximum Stock Level",
                    ),
                ),
                (
                    "dimension",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Dimension"
                    ),
                ),
                (
                    "weight",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Weight"
                    ),
                ),
                (
                    "reorder_point",
                    models.PositiveIntegerField(
                        blank=True, default=0, null=True, verbose_name="Reorder Point"
                    ),
                ),
                (
                    "lead_time",
                    models.PositiveIntegerField(
                        blank=True, default=0, null=True, verbose_name="Lead Time"
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Serial Number",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=10,
                        null=True,
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "virtual_quantity",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=10,
                        null=True,
                        verbose_name="Virtual Quantity",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="erp.bimaerpcategory",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="BimaErpPurchaseDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("number", models.CharField(max_length=32, unique=True)),
                (
                    "number_at_partner",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                ("date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("CONFIRMED", "Confirmed"),
                            ("CANCELED", "CANCELED"),
                        ],
                        default="DRAFT",
                        max_length=128,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("QUOTE", "Quote"),
                            ("ORDER", "ORDER"),
                            ("INVOICE", "Invoice"),
                            ("CREDIT_NOTE", "Credit note"),
                            ("RFQ", "Request for Quotation"),
                        ],
                        default="Quote",
                        max_length=128,
                    ),
                ),
                (
                    "vat_label",
                    models.CharField(blank=True, default="", max_length=128, null=True),
                ),
                (
                    "vat_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                ("note", models.TextField(blank=True, null=True)),
                ("private_note", models.TextField(blank=True, null=True)),
                (
                    "validity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("day_30", "30 days"),
                            ("day_15", "15 days"),
                            ("day_10", "10 days"),
                            ("day_45", "45 days"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "delivery_terms",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "total_amount_without_vat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "total_after_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "total_vat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "total_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NOT_PAID", "NOT_PAID"),
                            ("PARTIAL_PAID", "PARTIAL_PAID"),
                            ("PAID", "PAID"),
                        ],
                        default="NOT_PAID",
                        null=True,
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        default=0,
                        max_digits=18,
                        null=True,
                        verbose_name="Amount Paid",
                    ),
                ),
                (
                    "next_due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Next Due Date"
                    ),
                ),
                (
                    "is_payment_late",
                    models.BooleanField(default=False, verbose_name="Is Payment Late?"),
                ),
                (
                    "days_in_late",
                    models.PositiveIntegerField(default=0, verbose_name="Days in Late"),
                ),
                (
                    "last_due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Last Due Date"
                    ),
                ),
                (
                    "parents",
                    models.ManyToManyField(
                        blank=True, to="erp.bimaerppurchasedocument"
                    ),
                ),
                (
                    "partner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="erp.bimaerppartner",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "permissions": [],
                "default_permissions": (),
            },
        ),
    ]
